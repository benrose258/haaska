FROM alpine:latest

# Install dependencies
RUN apk add --no-cache iptables ip6tables curl bash tini ca-certificates python3 py3-pip py3-requests

# Install Tailscale (version 1.82.0 for amd64)
RUN curl -fsSL https://pkgs.tailscale.com/stable/tailscale_1.82.0_amd64.tgz | tar -xz -C /usr/local/bin --strip-components=1

# Create writable directories for Tailscale (Lambda's /tmp is writable)
RUN mkdir -p /tmp/tailscale-state /tmp/tailscale-socket

# Set environment variables for Tailscale paths
ENV TS_STATE_DIR=/tmp/tailscale-state
ENV TS_SOCKET_DIR=/tmp/tailscale-socket
ENV TS_SOCKET=$TS_SOCKET_DIR/tailscaled.sock

# Set working directory for your application
WORKDIR /usr/src/app

# Copy your application files (haaska code)
COPY . /usr/src/app

# Install Haaska Python dependencies
RUN if [ -f requirements.txt ]; then pip install --no-cache-dir --break-system-packages -r requirements.txt; fi

# Embed the entrypoint script directly
RUN cat <<'EOF' > /entrypoint.sh
#!/bin/bash
set -euo pipefail

echo "[entrypoint] Starting tailscaled..."
tailscaled --tun=userspace-networking --statedir="${TS_STATE_DIR}" --socket="${TS_SOCKET}" &

# Wait for the socket to appear (up to 30 seconds)
for i in {1..30}; do
  if [ -S "${TS_SOCKET}" ]; then
    echo "[entrypoint] tailscaled is ready!"
    break
  fi
  echo "[entrypoint] Waiting for tailscaled socket..."
  sleep 1
done

if [ ! -S "${TS_SOCKET}" ]; then
  echo "[entrypoint] tailscaled socket not found after timeout"
  exit 1
fi

# Ensure the auth key is provided
if [ -z "${TAILSCALE_AUTH_KEY:-}" ]; then
  echo "[entrypoint] ERROR: TAILSCALE_AUTH_KEY environment variable is not set"
  exit 1
fi

echo "[entrypoint] Running tailscale up..."
export TAILSCALE_SOCKET="${TS_SOCKET}"
tailscale --socket="${TS_SOCKET}" up --authkey="${TAILSCALE_AUTH_KEY}" --hostname="lambda-node"

echo "[entrypoint] Tailscale is up. Starting Haaska..."

# Run the Haaska app (assuming handler.py or equivalent)
# Replace this with your actual app startup if different
exec python3 handler.py
EOF

# Make the entrypoint script executable
RUN chmod +x /entrypoint.sh

# Use tini as the init process to handle signals and reaping zombies
ENTRYPOINT ["/sbin/tini", "--", "/entrypoint.sh"]
